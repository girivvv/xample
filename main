from fastapi import FastAPI, HTTPException
import requests

# Server Configuration
SERVER_IP = "http://167.71.237.12"
SERVER_PORT = "9000"
POST_URL = f"{SERVER_IP}:{SERVER_PORT}/api/receive"

# Switch state
switch_state = {
    "switch_1": "off",
    "switch_2": "off",
    "switch_3": "off"
}

# FastAPI App
app = FastAPI()

# Get switch state
@app.get("/get_state")
async def get_state():
    return switch_state

# Toggle switch state
@app.post("/toggle")
async def toggle_switch(data: dict):
    switch_id = data.get("switch_id")
    new_state = data.get("state")

    if switch_id and new_state in ["on", "off"]:
        switch_state[switch_id] = new_state
        payload = {"switch_id": switch_id, "switch_state": new_state}
        try:
            response = requests.post(POST_URL, json=payload)
            return {
                "status": "success",
                "response": response.text,
                "switch_state": switch_state[switch_id]
            }
        except requests.exceptions.RequestException as e:
            raise HTTPException(status_code=500, detail=str(e))
    else:
        raise HTTPException(status_code=400, detail="Invalid payload")

# Serve HTML
@app.get("/")
async def serve_html():
    try:
        with open("/var/www/html/iot/iot-control-2/index.html", "r", encoding="utf-8") as f:
            return {"html": f.read()}
    except FileNotFoundError:
        raise HTTPException(status_code=404, detail="HTML file not found")
